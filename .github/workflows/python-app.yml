name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


jobs:
  
  build:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.contents.outputs.data}}
      
 
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          echo installing packages
          python -m pip install --upgrade pip
          pip install flake8 pytest
      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with py1
        id: contents1
        run: |
          python 1.py
      - name: Test with py2
        id: contents2
        run: |
          python 2.py
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: q.txt
      - name: Test with py3
        id: contents3
        run: |
          python 3.py
      - name: Rollback Release
        if: failure()
        uses: author/action-rollback@1.0.0
        with:
          # Using a known release ID
          id: ${{ steps.contents3.id }}
          # Using a tag name
          #  If the release does not exist but the tag does, setting this to true will remove the tag.
          #delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
